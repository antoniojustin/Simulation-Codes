time_point_1 = rbinom (1000, 1, 0.5)
time_point_4 = runif(1000, -1, 1)
#####################################################################################################
z1 =   0.2 * time_point_1 + 3 * time_point_4
pr1 = 1/(1 + exp(-z1))
y_1 = rbinom(1000, 1, pr1)
y_2 = y_1
vac = sum(y_1 == 0)
z2 =  0.2 * time_point_1[y_2 == 0] + -3 * time_point_4[y_2 == 0]
pr2 = 1/(1 + exp(-z2))
y_2[y_2 == 0] = rbinom(vac, 1, pr2)
#####################################################################################################
df = data.frame(cbind(time_point_1,time_point_4, y_1, y_2))
# train test split
split = 0.8
smp_size <- floor(split * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
View(train)
time_point_1 = rbinom (1000, 1, 0.5)
time_point_2 = rbinom (1000, 1, 0.5)
time_point_3 = rbinom (1000, 1, 0.5)
time_point_4 = rbinom (1000, 1, 0.5)
#####################################################################################################
z1 =   1.6 * time_point_4 + rnorm(1000)
pr1 = 1/(1 + exp(-z1))
y_1 = rbinom(1000, 1, pr1)
y_2 = y_1
vac = sum(y_1 == 0)
z2 = (- 1) * time_point_4[y_2 == 0] + rnorm(vac)
pr2 = 1/(1 + exp(-z2))
y_2[y_2 == 0] = rbinom(vac, 1, pr2)
split = 0.8
smp_size <- floor(split * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
# split into two datasets
train2 = train[train$y_1 == 0,]
train
train_one_part = train[,-"y_1"]
train_one_part = train[,-y_1]
View(train_one_part)
View(train)
train_one_part = train[,-"y_1"]
train_one_part = subset(train, select = -"y_1")
train_one_part = subset(train, select = -y_1)
View(train_one_part)
l1 = glm(y_2 ~., data = train_one_part, family = "binomial")
pred_f = predict(l1, newdata = test, type = "response")
l1
train_two_part = subset(train, select = -y_2)
l2.1 = glm(y_1 ~., data = train_two_part, family = "binomial")
l2.1
train2
View(train2)
train2 = train[train$y_1 == 0,]
train2$y_1 = NULL
View(train2)
logistic_auc = function(df, split = 0.8){
# train test split
smp_size <- floor(split * nrow(df))
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
# split into two datasets
train2 = train[train$y_1 == 0,]
train2$y_1 = NULL
# logistic
# one part model
train_one_part = subset(train, select = -y_1)
l1 = glm(y_2 ~., data = train_one_part, family = "binomial")
pred_f = predict(l1, newdata = test, type = "response")
# two parts model
train_two_part = subset(train, select = -y_2)
l2.1 = glm(y_1 ~., data = train_two_part, family = "binomial")
l2.2 = glm(y_2 ~., data = train2, family = "binomial")
pred_1 = predict(l2.1, newdata = test, type = "response")
pred_2 = predict(l2.2, newdata = test, type = "response")
pred_combined = pred_1 + pred_2 * (1 -  pred_1)
# 1 parts and 2 parts test AUC
a = roc(test$y_2, pred_f, quiet = T)
b = roc(test$y_2, pred_combined, quiet = T)
# 1 parts and 2 parts training AUC
c = roc(train$y_2, l1$fitted.values, quiet = T)
d_1 = roc(train$y_1,l2.1$fitted.values, quiet = T)
d_2 = roc(train2$y_2,l2.2$fitted.values, quiet = T)
# coefficients
coef_l1 = l1$coefficients
coef_l2.1 = l2.1$coefficients
coef_l2.2 = l2.2$coefficients
# average y_1 and y_2 values
ay1 = sum(df$y_1)/length(df$y_1)
ay2 = sum(df$y_2)/length(df$y_1)
return(list(c(a$auc,b$auc, c$auc, d_1$auc, d_2$auc), coef_l1, coef_l2.1, coef_l2.2, c(ay1, ay2)))
}
logistic_auc(df)
library(pROC)
library(xgboost)
library(dplyr)
library(data.table)
logistic_auc(df)
